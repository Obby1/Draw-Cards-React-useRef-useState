{"ast":null,"code":"import _slicedToArray from \"/home/obby/Springboard/exercises/React/CRA/React-Effects-Refs-Ex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/obby/Springboard/exercises/React/CRA/React-Effects-Refs-Ex/src/Counter.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nfunction Counter() {\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    count = _useState2[0],\n    setCount = _useState2[1];\n  var prevCountRef = useRef();\n  useEffect(function () {\n    console.log(\"starting useEffect\");\n    prevCountRef.current = count;\n    console.log(\"prevCountRef.current = count\");\n    console.log(\"\".concat(prevCountRef.current, \" = \").concat(count));\n    console.log(\"ending useEffect\");\n  });\n  function increment() {\n    setCount(count + 1);\n  }\n  var prevCount = prevCountRef.current;\n  console.log(\"prevCount = \".concat(prevCount));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, \"Current count: \", count), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, \"Previous count: \", prevCount), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: increment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, \"Increment\"));\n}\nexport default Counter;\n\n// Notes:\n// when the Counter renders, I am saving the current Count as the previous Count in a variable called prevCount which is saved using useRef. This previous Count will be displayed as previous count when the component re-renders","map":{"version":3,"names":["React","useState","useEffect","useRef","Counter","_useState","_useState2","_slicedToArray","count","setCount","prevCountRef","console","log","current","concat","increment","prevCount","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick"],"sources":["/home/obby/Springboard/exercises/React/CRA/React-Effects-Refs-Ex/src/Counter.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nfunction Counter() {\n    const [count, setCount] = useState(0);\n    const prevCountRef = useRef();\n\n    useEffect(() => {\n        console.log(`starting useEffect`)\n        prevCountRef.current = count;\n        console.log(`prevCountRef.current = count`)\n        console.log(`${prevCountRef.current} = ${count}`)\n        console.log(`ending useEffect`)\n    });\n\n    function increment() {\n        setCount(count + 1);\n    }\n\n    const prevCount = prevCountRef.current;\n    console.log(`prevCount = ${prevCount}`);\n\n    return (\n        <div>\n            <p>Current count: {count}</p>\n            <p>Previous count: {prevCount}</p>\n            <button onClick={increment}>Increment</button>\n        </div>\n    );\n}\n\nexport default Counter;\n\n\n// Notes:\n// when the Counter renders, I am saving the current Count as the previous Count in a variable called prevCount which is saved using useRef. This previous Count will be displayed as previous count when the component re-renders"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAE1D,SAASC,OAAOA,CAAA,EAAG;EAAA,IAAAC,SAAA,GACWJ,QAAQ,CAAC,CAAC,CAAC;IAAAK,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA9BG,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EACtB,IAAMI,YAAY,GAAGP,MAAM,EAAE;EAE7BD,SAAS,CAAC,YAAM;IACZS,OAAO,CAACC,GAAG,sBAAsB;IACjCF,YAAY,CAACG,OAAO,GAAGL,KAAK;IAC5BG,OAAO,CAACC,GAAG,gCAAgC;IAC3CD,OAAO,CAACC,GAAG,IAAAE,MAAA,CAAIJ,YAAY,CAACG,OAAO,SAAAC,MAAA,CAAMN,KAAK,EAAG;IACjDG,OAAO,CAACC,GAAG,oBAAoB;EACnC,CAAC,CAAC;EAEF,SAASG,SAASA,CAAA,EAAG;IACjBN,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;EACvB;EAEA,IAAMQ,SAAS,GAAGN,YAAY,CAACG,OAAO;EACtCF,OAAO,CAACC,GAAG,gBAAAE,MAAA,CAAgBE,SAAS,EAAG;EAEvC,oBACIhB,KAAA,CAAAiB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACIvB,KAAA,CAAAiB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,iBAAe,EAACf,KAAK,CAAK,eAC7BR,KAAA,CAAAiB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,kBAAgB,EAACP,SAAS,CAAK,eAClChB,KAAA,CAAAiB,aAAA;IAAQO,OAAO,EAAET,SAAU;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,WAAS,CAAS,CAC5C;AAEd;AAEA,eAAenB,OAAO;;AAGtB;AACA"},"metadata":{},"sourceType":"module"}