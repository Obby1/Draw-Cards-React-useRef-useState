{"ast":null,"code":"import _slicedToArray from \"/home/obby/Springboard/exercises/React/CRA/React-Effects-Refs-Ex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/obby/Springboard/exercises/React/CRA/React-Effects-Refs-Ex/src/Counter.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nfunction Counter() {\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    count = _useState2[0],\n    setCount = _useState2[1];\n  var prevCountRef = useRef();\n  useEffect(function () {\n    prevCountRef.current = count;\n  });\n  function increment() {\n    setCount(count + 1);\n  }\n  var prevCount = prevCountRef.current;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, \"Current count: \", count), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, \"Previous count: \", prevCount), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: increment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, \"Increment\"));\n}\nexport default Counter;","map":{"version":3,"names":["React","useState","useEffect","useRef","Counter","_useState","_useState2","_slicedToArray","count","setCount","prevCountRef","current","increment","prevCount","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick"],"sources":["/home/obby/Springboard/exercises/React/CRA/React-Effects-Refs-Ex/src/Counter.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nfunction Counter() {\n    const [count, setCount] = useState(0);\n    const prevCountRef = useRef();\n\n    useEffect(() => {\n        prevCountRef.current = count;\n    });\n\n    function increment() {\n        setCount(count + 1);\n    }\n\n    const prevCount = prevCountRef.current;\n\n    return (\n        <div>\n            <p>Current count: {count}</p>\n            <p>Previous count: {prevCount}</p>\n            <button onClick={increment}>Increment</button>\n        </div>\n    );\n}\n\nexport default Counter;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAE1D,SAASC,OAAOA,CAAA,EAAG;EAAA,IAAAC,SAAA,GACWJ,QAAQ,CAAC,CAAC,CAAC;IAAAK,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA9BG,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EACtB,IAAMI,YAAY,GAAGP,MAAM,EAAE;EAE7BD,SAAS,CAAC,YAAM;IACZQ,YAAY,CAACC,OAAO,GAAGH,KAAK;EAChC,CAAC,CAAC;EAEF,SAASI,SAASA,CAAA,EAAG;IACjBH,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;EACvB;EAEA,IAAMK,SAAS,GAAGH,YAAY,CAACC,OAAO;EAEtC,oBACIX,KAAA,CAAAc,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACIpB,KAAA,CAAAc,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,iBAAe,EAACZ,KAAK,CAAK,eAC7BR,KAAA,CAAAc,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,kBAAgB,EAACP,SAAS,CAAK,eAClCb,KAAA,CAAAc,aAAA;IAAQO,OAAO,EAAET,SAAU;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,WAAS,CAAS,CAC5C;AAEd;AAEA,eAAehB,OAAO"},"metadata":{},"sourceType":"module"}